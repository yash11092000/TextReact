{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["props","className","mode","href","title","type","id","onClick","togglemode","toggletext","Textform","useState","text","settext","style","color","heading","value","length","onChange","event","target","rows","backgroundColor","newtext","toUpperCase","showAlert","toLowerCase","ans","i","charAt","change","document","getElementById","select","navigator","clipboard","writeText","split","join","Alert","alert","role","word","lower","slice","capitalize","msg","App","setmode","setAlert","message","setTimeout","Navbar","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.71ed023c.chunk.js","sourcesContent":["import React from 'react'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function (props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"aboutus\">About us</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/\">Contact Me</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/\">Feedback</Link>\r\n              </li> */}\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode === \"light\"?'dark':\"light\"}`}>\r\n              <input className=\"form-check-input\" onClick={props.togglemode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\">{props.toggletext}</label>\r\n            </div>\r\n\r\n            {/* <div className={`form-check form-switch text-${props.buttoncol === \"primary\"?'success':\"primary\"}`}>\r\n              <input className=\"form-check-input\" onClick={props.btncol} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\">{props.toggletext}</label>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n","// import { useState } from \"react\"\r\nimport React, {useState} from 'react'\r\n\r\nexport default function Textform(props) {\r\n    const handelupclick = ()=>{\r\n            // console.log(\"Uppercase was clicked\" + text)\r\n            let newtext = text.toUpperCase();\r\n            settext(newtext);\r\n            props.showAlert(\"Converted to uppercase\",\"success\");\r\n            \r\n    }\r\n    const handeldownclick = ()=>{\r\n        let newtext = text.toLowerCase();\r\n        settext(newtext);\r\n        props.showAlert(\"Converted to Lowercase\",\"success\");\r\n\r\n        \r\n    }\r\n    const handelCopy = ()=>{\r\n        var text = document.getElementById(\"mybox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text Copied\",\"success\");\r\n\r\n    }\r\n    const handelextraspace =()=>{\r\n        let newtext = text.split(/[ ]+/);\r\n        settext(newtext.join(\" \"))\r\n        props.showAlert(\"Extra spaces has been removed\",\"success\");\r\n\r\n    }\r\n    const handelreverseclick = ()=>{\r\n        let newtext = text;\r\n        let change = newtext;\r\n        let ans = \"\";\r\n        for(let i=change.length-1;i>=0;i--){\r\n            ans+=change.charAt(i);\r\n        }\r\n        newtext = ans;\r\n        settext(newtext);\r\n        props.showAlert(\"Text has been reversed\",\"success\");\r\n\r\n    }\r\n\r\n\r\n    const handelzigzagclick = ()=>{\r\n        let newtext = text;\r\n        let ans = \"\";\r\n        for(let i=0;i<newtext.length;i++){\r\n            if(i%2===0){\r\n                ans+=newtext.charAt(i).toUpperCase();\r\n            }\r\n            else{\r\n                ans+=newtext.charAt(i).toLowerCase();\r\n            }\r\n        }\r\n        newtext = ans;\r\n        settext(newtext);\r\n        props.showAlert(\"Text has been zigzaged\",\"success\");\r\n\r\n    }\r\n    const handelonchange=(event)=>{\r\n        // console.log(\"onchange was clicked\")\r\n        settext(event.target.value)\r\n        \r\n}\r\n    \r\n\r\n    const [text, settext] = useState(\"\");\r\n    // text = \"new text\"; //Wrong way to change state\r\n    // settext(\"new text\") //correct way to change state\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color:props.mode === 'dark'?'white':'black'}}>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" id=\"mybox\" value={text.length>0?text:\"\"} onChange={handelonchange} rows=\"8\" style={{backgroundColor:props.mode === \"dark\"?'#0d1c3c':\"white\",color:props.mode === 'dark'?'white':'black'}}></textarea>\r\n                    <button className=\"btn btn-primary my-3 mx-2\" onClick={handelupclick}>Convert to UpperCase</button>\r\n                    <button className=\"btn btn-primary my-3 mx-2\" onClick={handeldownclick}>Convert to LowerCase</button>\r\n                    <button className=\"btn btn-primary my-3 mx-2\" onClick={handelzigzagclick}>Convert to ZigZag</button>\r\n                    <button className=\"btn btn-primary my-3 mx-2\" onClick={handelreverseclick}>Convert to Reverse</button>\r\n                    <button className=\"btn btn-primary my-3 mx-2\" onClick={handelCopy}>Copy text</button>\r\n                    <button className=\"btn btn-primary my-3 mx-2\" onClick={handelextraspace}>Remove extra space</button>\r\n                    {/* <button className=\"btn btn-primary my-3 mx-2\" onClick={handelpalclick}>Check palindrome</button> */}\r\n\r\n                </div>\r\n\r\n                <div className=\"container my-3 text-${props.mode} style={{color:props.mode === 'dark'?'white':'black'}}\">\r\n                    <h2>Text Summery</h2>\r\n                    <p>your text has {text.split(\" \").length}  words and {text.length} character</p>\r\n                    <p>your will require {0.008 * text.split(\" \").length} </p>\r\n                    <h2>Preview</h2>\r\n                    <p>{text.length>0?text:\"enter something in the textbox above\"}</p>\r\n                </div>\r\n\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+ lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n        </div>\r\n    )\r\n}\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import Aboutus from './components/Aboutus';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setmode] = useState('light');//wheter dark mode is enables or not\n  const [text,settext] = useState(\"Enable Light Mode\");\n  // const [buttoncol, setbuttoncol] = useState(\"primary\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert= (message,type) =>{\n    setAlert({\n            msg:message,\n            type:type\n            })\n            setTimeout(() => {\n              setAlert(null)\n            }, 1500);\n     }  \n\n  const togglemode = () =>{\n      if(mode === 'light'){\n        setmode('dark');\n        settext('Enable Light Mode')\n        document.body.style.backgroundColor = '#17315c';\n        showAlert(\"Dark mode has been enabled\",\"success\");\n      }\n      else{\n        setmode('light');\n        settext('Enable Dark Mode')\n        document.body.style.backgroundColor = 'white';\n        showAlert(\"light mode has been enabled\",\"success\");\n      }\n  }\n  \n  return (\n    <>\n    {/* <Router> */}\n<Navbar title=\"TextUtils\" mode={mode} togglemode={togglemode} toggletext={text}/> \n<Alert alert={alert}/>\n<div className=\"container my-3\">\n{/* <Switch>\n          <Route exact path=\"/aboutus\">\n            <Aboutus/>\n          </Route> */}\n          {/* <Route exact path=\"/\"> */}\n          <Textform heading=\"Enter the text to analyze below\" mode={mode} showAlert={showAlert}/>\n          {/* </Route> */}\n{/* // </Switch> */}\n{/* // </Router> */}\n</div>\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}